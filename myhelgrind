==57== Helgrind, a thread error detector
==57== Copyright (C) 2007-2017, and GNU GPL'd, by OpenWorks LLP et al.
==57== Using Valgrind-3.20.0 and LibVEX; rerun with -h for copyright info
==57== Command: ./philo 2 100 200 200
==57== Parent PID: 16
==57== 
==57== ---Thread-Announcement------------------------------------------
==57== 
==57== Thread #1 is the program's root thread
==57== 
==57== ---Thread-Announcement------------------------------------------
==57== 
==57== Thread #2 was created
==57==    at 0x49A7122: clone (clone.S:71)
==57==    by 0x486C2EB: create_thread (createthread.c:101)
==57==    by 0x486DE0F: pthread_create@@GLIBC_2.2.5 (pthread_create.c:817)
==57==    by 0x48475DA: pthread_create_WRK (hg_intercepts.c:445)
==57==    by 0x4848AF5: pthread_create@* (hg_intercepts.c:478)
==57==    by 0x109FC1: main (ph_main.c:28)
==57== 
==57== ----------------------------------------------------------------
==57== 
==57== Possible data race during read of size 1 at 0x4A7D048 by thread #1
==57== Locks held: none
==57==    at 0x4844071: my_memcmp (hg_intercepts.c:226)
==57==    by 0x484431F: mutex_destroy_WRK (hg_intercepts.c:882)
==57==    by 0x4848EE3: pthread_mutex_destroy (hg_intercepts.c:905)
==57==    by 0x109E41: kill_mutexes (ph_exit.c:49)
==57==    by 0x109ED1: exit_func (ph_exit.c:60)
==57==    by 0x10A001: main (ph_main.c:31)
==57== 
==57== This conflicts with a previous write of size 4 by thread #2
==57== Locks held: none
==57==    at 0x48717D1: __pthread_mutex_unlock_usercnt (pthread_mutex_unlock.c:52)
==57==    by 0x48717D1: pthread_mutex_unlock (pthread_mutex_unlock.c:357)
==57==    by 0x4844D41: mutex_unlock_WRK (hg_intercepts.c:1182)
==57==    by 0x4848F2E: pthread_mutex_unlock (hg_intercepts.c:1200)
==57==    by 0x10A270: vulture (ph_vulture.c:32)
==57==    by 0x48477D2: mythread_wrapper (hg_intercepts.c:406)
==57==    by 0x486D608: start_thread (pthread_create.c:477)
==57==    by 0x49A7132: clone (clone.S:95)
==57==  Address 0x4a7d048 is 8 bytes inside a block of size 120 alloc'd
==57==    at 0x483E8D5: malloc (vg_replace_malloc.c:393)
==57==    by 0x109AE3: ph_calloc (ph_utils.c:21)
==57==    by 0x109BE6: create_control (ph_utils.c:44)
==57==    by 0x109F78: main (ph_main.c:25)
==57==  Block was alloc'd by thread #1
==57== 
==57== ----------------------------------------------------------------
==57== 
==57== Thread #1's call to pthread_mutex_destroy failed
==57==    with error code 16 (EBUSY: Device or resource busy)
==57==    at 0x4844439: mutex_destroy_WRK (hg_intercepts.c:893)
==57==    by 0x4848EE3: pthread_mutex_destroy (hg_intercepts.c:905)
==57==    by 0x109E41: kill_mutexes (ph_exit.c:49)
==57==    by 0x109ED1: exit_func (ph_exit.c:60)
==57==    by 0x10A001: main (ph_main.c:31)
==57== 
==57== ----------------------------------------------------------------
==57== 
==57== Thread #1: pthread_mutex_destroy of a locked mutex
==57==    at 0x484436C: mutex_destroy_WRK (hg_intercepts.c:887)
==57==    by 0x4848EE3: pthread_mutex_destroy (hg_intercepts.c:905)
==57==    by 0x109E8F: kill_mutexes (ph_exit.c:51)
==57==    by 0x109ED1: exit_func (ph_exit.c:60)
==57==    by 0x10A001: main (ph_main.c:31)
==57== 
==57== ----------------------------------------------------------------
==57== 
==57== Thread #1's call to pthread_mutex_destroy failed
==57==    with error code 16 (EBUSY: Device or resource busy)
==57==    at 0x4844439: mutex_destroy_WRK (hg_intercepts.c:893)
==57==    by 0x4848EE3: pthread_mutex_destroy (hg_intercepts.c:905)
==57==    by 0x109E8F: kill_mutexes (ph_exit.c:51)
==57==    by 0x109ED1: exit_func (ph_exit.c:60)
==57==    by 0x10A001: main (ph_main.c:31)
==57== 
==57== 
==57== Use --history-level=approx or =none to gain increased speed, at
==57== the cost of reduced accuracy of conflicting-access information
==57== For lists of detected and suppressed errors, rerun with: -s
==57== ERROR SUMMARY: 18 errors from 4 contexts (suppressed: 24245 from 65)
